align_enum_equ_span     = 4     # '=' in enum definition
align_on_tabstop        = TRUE      # align on tabstops
align_right_cmt_span    = 3
align_struct_init_span  = 3     # align stuff in a structure init '= { }'
align_with_tabs         = false      # use tabs to align
indent_class            = true
indent_columns          = output_tab_size
indent_func_const       = 0
indent_func_proto_param = true
indent_label            = 1
indent_member           = 0
indent_namespace        = true
indent_namespace_level  = 4
indent_with_tabs        = 0
input_tab_size          = 4
mod_full_brace_do       = force     # "do { a--; } while ();" vs "do a--; while ();"
mod_full_brace_for      = force     # "for () { a--; }" "for () a--;"
mod_full_brace_function = force
mod_full_brace_if       = force     # "if (a) { a--; }" vs "if (a) a--;"
mod_full_brace_nl       = 3         # do not remove if more than 3 newlines
mod_full_brace_while    = force     #  "while (a) { a--; }" vs "while (a) a--;"
mod_paren_on_return     = remove    # "return 1;" vs "return (1);"
newlines                = auto
nl_after_return         = false
nl_before_case          = true
nl_before_for           = force
nl_before_if            = force
nl_brace_else           = add       # "} else" vs "} \n else" - cuddle else
nl_brace_while          = add       # "} while" vs "} \n while" - cuddle while
nl_do_brace             = force     # "do {" vs "do \n {"
nl_else_brace           = force     # "else {" vs "else \n {"
nl_enum_brace           = remove    # "enum {" vs "enum \n {"
nl_fcall_brace          = remove    # "list_for_each() {" vs "list_for_each()\n{"
nl_fdef_brace           = add       # "int foo() {" vs "int foo()\n{"
nl_for_brace            = force     # "for () {" vs "for () \n {"
nl_func_var_def_blk     = 1         # number of blank lines after a block of variable definitions at the top of a function body
nl_if_brace             = force     # "if () {" vs "if () \n {"
nl_struct_brace         = remove    # "struct {" vs "struct \n {"
nl_switch_brace         = force     # "switch () {" vs "switch () \n {"
nl_union_brace          = remove    # "union {" vs "union \n {"
nl_while_brace          = force     # "while () {" vs "while () \n {"
output_tab_size         = 4
pp_define_at_level      = false    # false/true
pp_indent               = add
pp_indent_at_level      = true     # false/true
pp_indent_count         = 4        # number
sp_addr                 = remove
sp_after_cast           = add
sp_after_cast           = remove    # "(int) a" vs "(int)a"
sp_after_class_colon    = force
sp_after_comma          = add
sp_after_comma          = force
sp_after_dc             = remove
sp_after_new            = add
sp_after_operator       = remove
sp_after_operator_sym   = remove
sp_after_semi           = add       # ";//" vs "; //"
sp_after_semi_for       = force
sp_after_sparen         = force     # "if () {" vs "if (){"
sp_arith                = add
sp_assign               = add
sp_assign               = add
sp_before_case_colon    = remove
sp_before_class_colon   = force
sp_before_comma         = remove
sp_before_dc            = remove
sp_before_sparen        = force     # "if (" vs "if("
sp_before_square        = remove
sp_before_squares       = remove
sp_bool                 = add
sp_brace_catch          = add
sp_brace_else           = add
sp_brace_finally        = add
sp_brace_typedef        = add
sp_catch_brace          = add
sp_cmt_cpp_start        = add       # "// A" vs "//A"
sp_compare              = add
sp_cpp_cast_paren       = remove
sp_else_brace           = add
sp_endif_cmt            = add       # "#endif//" vs "#endif //"
sp_enum_assign          = add
sp_finally_brace        = add
sp_func_call_paren      = remove    # "foo (" vs "foo("
sp_func_def_paren       = remove    # "int foo (){" vs "int foo(){"
sp_func_proto_paren     = remove    # "int foo ();" vs "int foo();"
sp_inside_braces        = add       # "{ 1 }" vs "{1}"
sp_inside_braces_enum   = add       # "{ 1 }" vs "{1}"
sp_inside_braces_struct = add       # "{ 1 }" vs "{1}"
sp_inside_paren_cast    = remove
sp_inside_square        = remove
sp_inv                  = remove
sp_not                  = remove
sp_paren_comma          = force
sp_sizeof_paren         = remove    # "sizeof (int)" vs "sizeof(int)"
sp_throw_paren          = remove
sp_try_brace            = add